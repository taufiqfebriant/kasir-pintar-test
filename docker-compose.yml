services:
  mysql:
    image: mysql:8.4
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elasticsearch
    environment:
      - discovery.type=${DISCOVERY_TYPE}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=false
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - app-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 20s

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - app-network

  app:
    build:
      context: .
    container_name: app
    environment:
      TZ: ${TZ}
      JWT_SECRET: ${JWT_SECRET}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      ELASTICSEARCH_HOST: ${ELASTICSEARCH_HOST}
      ELASTICSEARCH_PORT: ${ELASTICSEARCH_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - elasticsearch
      - redis
    command: >
      /bin/sh -c "
      chmod +x ./scripts/wait-for-it.sh &&
      ./scripts/wait-for-it.sh ${MYSQL_HOST}:${MYSQL_PORT} -- 
      ./scripts/wait-for-it.sh ${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT} -- 
      ./scripts/wait-for-it.sh ${REDIS_HOST}:${REDIS_PORT} -- 
      npm run dev"
    volumes:
      - .:/app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  es_data:
    driver: local
